- hosts: ec2_instances
  vars:
    local_project_path: "{{ playbook_dir }}"
    remote_deploy_path: /var/www/rails-docs/
    remote_temp_path: /home/ubuntu/rails-docs-temp/
    rails_env: production
    ansible_ssh_transfer_method: scp

  tasks:
    - name: Synchronize project files from local to remote temp directory
      ansible.posix.synchronize:
        src: "{{ local_project_path }}/"
        dest: "{{ remote_temp_path }}"
        delete: yes
        recursive: yes
      delegate_to: localhost

    - name: Create the remote deploy directory
      ansible.builtin.file:
        path: "{{ remote_deploy_path }}"
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: '0755'
      become: yes

    - name: Copy files from temp directory to deploy directory
      ansible.builtin.copy:
        src: "{{ remote_temp_path }}"
        dest: "{{ remote_deploy_path }}"
        remote_src: yes
      become: yes

    - name: Remove the temp directory
      ansible.builtin.file:
        path: "{{ remote_temp_path }}"
        state: absent

    - name: Ensure deploy user owns the application directory
      ansible.builtin.file:
        path: "/var/www/rails-docs/"
        owner: deploy
        group: deploy
        recurse: yes
      become: true

    - name: Configure Bundler path
      ansible.builtin.command:
        cmd: sudo -u deploy bundle config set --local path 'vendor/bundle'
      args:
        chdir: "/var/www/rails-docs/"
      environment:
        RAILS_ENV: production
      become: true      
    
    - name: Configure Bundler to exclude development and test groups
      command: bundle config set without 'development test'
      args:
        chdir: "{{ remote_deploy_path }}"
      environment:
        RAILS_ENV: "{{ rails_env }}"
      become: true

    - name: Run Bundle install
      ansible.builtin.command:
        cmd: sudo -u deploy -- bash -c 'bundle install'
      args:
        chdir: "/var/www/rails-docs/"
      environment:
        RAILS_ENV: production

    - name: Execute a command after sourcing .bashrc
      ansible.builtin.shell: |
        source ~/.bashrc
      args:
        executable: /bin/bash
    
    - name: Run Rails db:create and db:migrate
      ansible.builtin.command:
        cmd: bundle exec rails db:create db:migrate RAILS_ENV=production --trace
      args:
        chdir: "/var/www/rails-docs/"
      environment:
        RAILS_MASTER_KEY: "{{ rails_master_key }}"
        RAILS_ENV: "production"    
      become: true

    - name: Reload systemd manager configuration
      ansible.builtin.systemd:
        daemon_reload: yes
      become: true

    - name: Restart Puma
      ansible.builtin.systemd:
        name: puma
        state: restarted
        enabled: yes
      become: true
  