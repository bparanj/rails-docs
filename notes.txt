
  curl localhost:3000/up
  curl localhost:3000/tasks

  cd work
  cd rails-docs/

  export GEM_HOME="$HOME/.gem"
  export GEM_PATH="$HOME/.gem"
  export PATH="$HOME/.gem/bin:$PATH"
  
  rails -v
  RAILS_ENV=production bin/rails assets:precompile

  curl localhost:3000/tasks

  ruby -v
  git --version

  ls -al ~/.ssh/authorized_keys 
  cat  ~/.ssh/authorized_keys 
  ssh-keygen -t ed25519 -C "bparanj@gmail.com"
  ls -al ~/.ssh
  eval "$(ssh-agent -s)"
  cat ~/.ssh/config
  ssh-add ~/.ssh/id_ed25519

  cat ~/.ssh/id_ed25519.pub
  mkdir work
  cd work
  git clone git@github.com:bparanj/rails-docs.git
  cd rails-docs/

  bundle

  which ruby
  echo $GEM_HOME
  echo $GEM_PATH

  echo $GEM_PATH
  echo $GEM_HOME
  gem list bundler
  bundle
  rails c -e production

  cd config
  vi master.key

  rails c -e production
  sudo vi /etc/postgresql/16/main/pg_hba.conf 
  sudo systemctl restart postgresql
  rails c -e production
  bin/rails db:create
  RAILS_ENV=production bin/rails db:create 

  rails generate scaffold Task name:string

  rails db:migrate
  RAILS_ENV=production rails db:migrate

  RAILS_ENV=production rails s


ssh -p 2222 -i "RailsDevBox.pem" ubuntu@35.93.227.4

$ rails -v
Rails 7.1.3.2
$ RAILS_ENV=production bin/rails assets:precompile

production server:

ls -la ~/.ssh
mkdir ~/.ssh
chmod 700 ~/.ssh
touch ~/.ssh/authorized_keys
chmod 600 ~/.ssh/authorized_keys
vi ~/.ssh/authorized_keys

chown -R deploy:deploy /home/deploy/.ssh
ll ~/.ssh
sudo systemctl restart sshd
vi ~/.ssh/authorized_keys
cat ~/.ssh/authorized_keys
sudo systemctl restart sshd

sudo systemctl restart sshd
ls -ld /var/www
sudo mkdir -p /var/www/railsdox
sudo chown deploy:deploy /var/www/railsdox
sudo chmod 755 /var/www/railsdox
sudo chown -R deploy:deploy /var/www/railsdox
pwd
mkdir -p /var/www/railsdox/shared/config
cd /var/www/railsdox/shared/config
vi database.yml

chmod 600 /var/www/railsdox/shared/config/database.yml
chmod 600 /var/www/railsdox/shared/config/master.key
touch /var/www/railsdox/shared/config/master.key
chmod 600 /var/www/railsdox/shared/config/master.key
vi master.key

cat master.key
RAILS_ENV=production bin/rails db:create
bin/rails -v
ruby -v
bundle
cd releases
cd 20240417184243/
cat Gemfile
rails -v
bin/rails -v
RAILS_ENV=production bin/rails db:create
RAILS_ENV=production bin/rails db:migrate
cat /var/www/railsdox/shared/puma.rb
ll /var/www/railsdox/shared/puma.rb
cat /etc/systemd/system/puma.service
vi /etc/systemd/system/puma.service
sudo vi /etc/systemd/system/puma.service
sudo systemctl enable puma.service
sudo systemctl start puma.service
sudo systemctl status puma.service
cat /etc/systemd/system/puma.service
sudo systemctl status puma.service
sudo systemctl start puma.service
sudo systemctl status puma.service
sudo systemctl restart puma.service
systemctl status puma.service
journalctl -xeu puma.service
sudo journalctl -xe
free -m
df -h
cd shared
vi puma.rb
sudo systemctl start puma.service
cat /var/www/railsdox/shared/log/puma_error.log
cd shared
cd log
printenv | grep RAILS
bundle exec puma -C /var/www/railsdox/shared/puma.rb --debug
cd current
bundle exec puma -C /var/www/railsdox/shared/puma.rb --debug
bundle exec puma -C /var/www/railsdox/shared/puma.rb
sudo systemctl start puma.service
systemctl status puma.service
journalctl -xeu puma.service
sudo systemctl start puma.service
curl localhost
curl localhost:3000

cat /etc/caddy/Caddyfile
sudo systemctl status caddy
curl -I localhost
bundle exec puma -p 3000
cat /etc/caddy/Caddyfile
rails routes
bin/rails routes
bundle exec puma -p 3000
RAILS_ENV=production bundle exec puma -p 3000

control node:

  curl localhost:3000/up
  curl localhost:3000/tasks

  cd work
  cd rails-docs/

  cat app/views/layouts/application.html.erb 

  RAILS_ENV=production bin/rails assets:precompile

  rails -v
  RAILS_ENV=production bin/rails assets:precompile

 
  cat ~/.ssh/authorized_keys
  ssh -i ~/.ssh/id_ed25519 -p 2222 deploy@54.188.245.219
  sudo systemctl restart sshd
  ssh -i ~/.ssh/id_ed25519 -p 2222 deploy@54.188.245.219
  cat ~/.ssh/authorized_keys
  ssh -i ~/.ssh/id_ed25519 -p 2222 deploy@54.188.245.219
  sudo systemctl restart sshd
  ssh -i ~/.ssh/id_ed25519 -p 2222 deploy@54.188.245.219
  ll ~/.ssh/config
  ll ~/.ssh/
  cat ~/.ssh/id_ed25519.pub 
  ssh -i ~/.ssh/id_ed25519 -p 2222 deploy@54.188.245.219

  Install ansible on control node
  sudo apt-add-repository ppa:ansible/ansible
  sudo apt update
  sudo apt install ansible

  vi rails-server.pem

  chmod 400 rails-server.pem

  ansible --version

  cat inventory.ini
  ansible-playbook -i inventory.ini caddy_ssl.yml
  cat inventory.ini
  echo $SSH_CONFIG
  vi ~/.ssh/config
  cat ansible.cfg
  vi ansible.cfg
  ansible-playbook -i inventory.ini caddy_ssl.yml
  curl http://clickplan.net/up
  ansible-playbook -i inventory.ini deploy.yml --extra-vars "rails_master_key=501f054eecfdeab14e455aecd0b73e9e"
  curl http://clickplan.net/up
  curl https://clickplan.net:8080/healthz
  ansible-playbook -i inventory.ini caddy_ssl.yml
  cat caddy_ssl.yml
  curl -I http://clickplan.net
  curl -I https://clickplan.net
  curl -I https://clickplan.net/up
  ansible-playbook -i inventory.ini caddy_ssl.yml
  curl -I https://clickplan.net/up
  curl -I https://clickplan.net/tasks

  git add Gemfile.lock ansible.cfg 
  git commit -m 'Fix ansible config'


Control Node

~/work/rails-docs$ history
  ruby -v
  git --version
  ls -al ~/.ssh
  ls -al ~/.ssh/authorized_keys 
  cat  ~/.ssh/authorized_keys 
  ssh-keygen -t ed25519 -C "bparanj@gmail.com"
  ls -al ~/.ssh
  eval "$(ssh-agent -s)"
  cat ~/.ssh/config
  ssh-add ~/.ssh/id_ed25519
  cat ~/.ssh/id_rsa.pub
  cat ~/.ssh/id_ed25519.pub
  pwd
  mkdir work
  cd work
  git clone git@github.com:bparanj/rails-docs.git
  cd rails-docs/
  ll
  bundle check
  bundle
  rm Gemfile.lock
  which ruby
  echo $GEM_HOME
  echo $GEM_PATH
  which chruby
  export GEM_HOME="$HOME/.gem"
  export GEM_PATH="$HOME/.gem"
  export PATH="$HOME/.gem/bin:$PATH"
  echo $GEM_PATH
  echo $GEM_HOME
  gem list bundler
  bundle
  ll
  vim .
  rails c -e production
  pwd
  cd config
  vi master.key
  pwd
  cd ..
  rails c -e production
  sudo vi /etc/postgresql/16/main/pg_hba.conf 
  sudo systemctl restart postgresql
  rails c -e production
  bin/rails db:create
  RAILS_ENV=production bin/rails db:create 
  rails c -e production
  rails generate scaffold Task name:string
  rails c -e production
  rails db:migrate
  RAILS_ENV=production rails db:migrate
  rails c -e production
  RAILS_ENV=production rails s
  history
  git status
  git pull
  pwd
  cap install
  bundle
  cap install


git commit -m 'Initialize Capistrano'
git pull
bundle
cap production deploy
git pull
cat ~/.ssh/id_rsa
ll ~/.ssh
ssh-add ~/.ssh/id_ed25519
cat ~/.ssh/id_ed25519.pub
git status
git add .
git status
git commit -m 'Install Capistrano related gems'
git push
git pull
cap production deploy
ssh -i ~/.ssh/id_ed25519 -p 2222 deploy@54.188.245.219
cat config/database.yml
cap production deploy

grep -R "\--daemon" /path/to/your/capistrano/configs

bundle config set frozen false
rm Gemfile.lock
bundle
cap production deploy
git checkout Gemfile.lock
bundle config set frozen false

bundle config set --local frozen false
cap production deploy

cap production deploy
curl http://54.188.245.219/up
  

